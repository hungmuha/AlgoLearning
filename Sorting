function BubbleSort(arr) {
    const swap = (arr, index1, index2) => {
//         let temp;
//         temp = arr[index1];
//         arr[index1] = arr[index2];
//         arr[index2] = temp;

// ES6 way
        [arr[index1],arr[index2]] = [arr[index2], arr[index1]];
    }
    //using noSwap variable to optimize the alogrithm 
    let noSwap;
    for(let i = arr.length; i > 0; i-- ) {
        noSwap = true;
        for( let j = 0; j<i-1; j ++) {
            console.log(arr);
            if(arr[j] > arr[j+1]) {
                swap(arr,j,j+1)
                noSwap = false;
            }
        }
        if(noSwap) break;
    }
    return arr
}

function SelectionSort(arr) {
    const swap = (arr, index1, index2) =>{
        [arr[index1],arr[index2]] = [arr[index2],arr[index1]];
    }
    for(let i = 0; i < arr.length; i++) {
        let smallestElem = i;
        for( let j = i+1; j < arr.length; j++) {
            if(arr[smallestElem] > arr[j]) {
                smallestElem = j
            }
        }
        //as the smallestElem index was found it would be swap for the original spot
        if(smallestElem != i) {
            swap(arr,smallestElem,i)
        }
    }
    return arr;
}

function InsertionSort(arr) {
    for(let i = 1; i < arr.length; i++) {
        if(arr[i] < arr[i-1]) {
            let checkingIndex = i;
            for(let j = i-1; j >= 0; j--) {
                if(arr[j] < arr[checkingIndex]) {
                    arr.splice(j+1,0,checkingIndex);
                    break;
                }
            }
        }
    }
    return arr;
}

function InsertionSortColt(arr) {
    for(let i = 1; i < arr.length; i++) {
        let currentValue = arr[i];
        for(var j = i-1; j >= 0 && arr[j] > currentValue; j--) {
            arr[j+1] = arr[j];
        }
        arr[j+1] = currentValue;
        console.log(arr);
    }
    return arr;
}